table CalendarFrom
	lineageTag: 5481590e-0ea8-49a8-a761-2a0aed38705b

	column Date
		dataType: dateTime
		formatString: mmmm d\, yyyy
		lineageTag: 05a0c8ac-b5fd-405d-9b73-415c60078fc5
		summarizeBy: none
		sourceColumn: Date

		variation Variation
			isDefault
			relationship: ae740edc-ce39-451f-bdcf-424274cbc63c
			defaultHierarchy: LocalDateTable_f4451b8c-4924-4b93-9f76-e84b0912ddd2.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isDateTimeCustom":true}

	column DateId
		dataType: int64
		formatString: 0
		lineageTag: 5c2cc165-4c66-4cff-b74d-a61356056db7
		summarizeBy: count
		sourceColumn: DateId

		annotation SummarizationSetBy = Automatic

	column Day
		dataType: int64
		formatString: 0
		lineageTag: 19a04dd7-533c-4c4d-bdac-d5cee1338c1d
		summarizeBy: sum
		sourceColumn: Day

		annotation SummarizationSetBy = Automatic

	column 'Week Day (#)'
		dataType: int64
		formatString: 0
		lineageTag: 29e0503d-29a3-4eff-b6d7-d0eda2c0f88d
		summarizeBy: sum
		sourceColumn: Week Day (#)

		annotation SummarizationSetBy = Automatic

	column 'Week Day'
		dataType: string
		lineageTag: 8c4faec0-bf3d-43f2-84b5-25da4c34068d
		summarizeBy: none
		sourceColumn: Week Day

		annotation SummarizationSetBy = Automatic

	column Week
		dataType: int64
		formatString: 0
		lineageTag: 788aaa9e-545a-4d71-8ee2-5685c36e1bfd
		summarizeBy: sum
		sourceColumn: Week

		annotation SummarizationSetBy = Automatic

	column 'Month (Long)'
		dataType: string
		lineageTag: 3d0a19dd-3788-424e-85da-0c2f589e03a2
		summarizeBy: none
		sourceColumn: Month (Long)

		annotation SummarizationSetBy = Automatic

	column Month
		dataType: string
		lineageTag: 3ed1a079-be13-403c-9eb6-d2cd467670ed
		summarizeBy: none
		sourceColumn: Month

		annotation SummarizationSetBy = Automatic

	column 'Month (#)'
		dataType: int64
		formatString: 0
		lineageTag: 9bc4192e-b2fc-4a8c-9a10-b4b948063626
		summarizeBy: sum
		sourceColumn: Month (#)

		annotation SummarizationSetBy = Automatic

	column Quarter
		dataType: int64
		formatString: 0
		lineageTag: d6dd3e08-5f50-45dc-aaa5-7b4c0d48497a
		summarizeBy: sum
		sourceColumn: Quarter

		annotation SummarizationSetBy = Automatic

	column Semester
		dataType: int64
		formatString: 0
		lineageTag: c157554f-7362-4a72-bf9b-333ec107e9f0
		summarizeBy: sum
		sourceColumn: Semester

		annotation SummarizationSetBy = Automatic

	column Year
		dataType: int64
		formatString: 0
		lineageTag: 07b8981b-d9d9-48cb-82e6-670296ca010c
		summarizeBy: sum
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	column 'Week (Year)'
		dataType: string
		lineageTag: a2a7b23a-129f-468b-848f-05688ff4e043
		summarizeBy: none
		sourceColumn: Week (Year)

		annotation SummarizationSetBy = Automatic

	column 'Month (Year)'
		dataType: string
		lineageTag: 8598fbc3-6169-4405-a5b9-e6e24804b062
		summarizeBy: none
		sourceColumn: Month (Year)

		annotation SummarizationSetBy = Automatic

	column 'Quarter (Year)'
		dataType: string
		lineageTag: 7a5add27-b7d0-4d8a-ba74-9408cbff3acf
		summarizeBy: none
		sourceColumn: Quarter (Year)

		annotation SummarizationSetBy = Automatic

	column 'Semester (Year)'
		dataType: string
		lineageTag: 89ada335-4b83-47bc-a320-68aa011eaa45
		summarizeBy: none
		sourceColumn: Semester (Year)

		annotation SummarizationSetBy = Automatic

	column WeekYearId
		dataType: int64
		formatString: 0
		lineageTag: a2bd42e8-995f-4853-8b1d-df61b827bacb
		summarizeBy: count
		sourceColumn: WeekYearId

		annotation SummarizationSetBy = Automatic

	column MonthYearId
		dataType: int64
		formatString: 0
		lineageTag: f309dc0c-c825-4a09-95df-a856bc1f931e
		summarizeBy: count
		sourceColumn: MonthYearId

		annotation SummarizationSetBy = Automatic

	column 'Week Start Date'
		dataType: dateTime
		formatString: Long Date
		lineageTag: d3eb56cd-f5bc-4669-a712-2eac1a96c3eb
		summarizeBy: none
		sourceColumn: Week Start Date

		variation Variation
			isDefault
			relationship: 4323bd16-4bfe-46ae-ab1f-31035b941d50
			defaultHierarchy: LocalDateTable_56f31ebd-6495-479f-b1bd-d193ef29deb7.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Week End Date'
		dataType: dateTime
		formatString: Long Date
		lineageTag: 581e8182-a1d0-4a4d-b365-f4aa74475cdb
		summarizeBy: none
		sourceColumn: Week End Date

		variation Variation
			isDefault
			relationship: 07b0fd99-1fc6-4aa9-9a1b-40a2154e6de0
			defaultHierarchy: LocalDateTable_c3d5f007-f72a-41a7-945f-4aaad100ab78.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column QuarterYearId
		dataType: int64
		formatString: 0
		lineageTag: 4b89aa77-5cad-42d7-a104-6e8a772385a7
		summarizeBy: count
		sourceColumn: QuarterYearId

		annotation SummarizationSetBy = Automatic

	column SemesterYearId
		dataType: int64
		formatString: 0
		lineageTag: a0cbdc62-15eb-43f4-8f40-929a9388ffb0
		summarizeBy: count
		sourceColumn: SemesterYearId

		annotation SummarizationSetBy = Automatic

	column 'Day (Relative)'
		dataType: int64
		formatString: 0
		lineageTag: d7c209a0-49e7-4078-b87a-269ec2e6f6fb
		summarizeBy: sum
		sourceColumn: Day (Relative)

		annotation SummarizationSetBy = Automatic

	column 'Week (Relative)'
		dataType: int64
		formatString: 0
		lineageTag: 0e2ce174-6c0a-40fc-9b65-96e1e1f6c23a
		summarizeBy: sum
		sourceColumn: Week (Relative)

		annotation SummarizationSetBy = Automatic

	column 'Month (Relative)'
		dataType: int64
		formatString: 0
		lineageTag: 2e67d4ce-c74c-4430-a90f-eede32ce6787
		summarizeBy: sum
		sourceColumn: Month (Relative)

		annotation SummarizationSetBy = Automatic

	column 'Year (Relative)'
		dataType: int64
		formatString: 0
		lineageTag: befc65b7-a7a7-4424-b69f-6a15ee7a4706
		summarizeBy: sum
		sourceColumn: Year (Relative)

		annotation SummarizationSetBy = Automatic

	column 'Work Day'
		dataType: string
		lineageTag: 8b216e49-f29a-4507-b0fe-001726aaa1e2
		summarizeBy: none
		sourceColumn: Work Day

		annotation SummarizationSetBy = Automatic

	partition CalendarFrom = m
		mode: import
		source = ```
				let 
				
				    P_Today =  DateTime.LocalNow(),
				    P_StartDate = #date(Date.Year(P_Today)-1,1,1),
				    P_EndDate  = Date.From(P_Today)
				,    
				    P_FirstDayOfWeek = 1,
				    P_IsCarnivalHoliday = true,
				    P_UseIsoWeek = true,
				    P_Culture = "en-US",
				    DayCount = Duration.Days(Duration.From(P_EndDate - P_StartDate)) + 1,
				    Source = List.Dates(P_StartDate,DayCount,#duration(1,0,0,0)),
				    TableFromList = Table.FromList(Source, Splitter.SplitByNothing()),    
				    ChangedType = Table.TransformColumnTypes(TableFromList,{{"Column1", type date}}),
				    RenamedColumns = Table.RenameColumns(ChangedType,{{"Column1", "Date"}}),
				    InsertId = Table.AddColumn(RenamedColumns, "DateId", each Date.Year([Date])*10000 + Date.Month([Date])*100 +Date.Day([Date])),
				    InsertYear = Table.AddColumn(InsertId, "Year", each Date.Year([Date])),
				    InsertQuarter = Table.AddColumn(InsertYear, "Quarter", each Date.QuarterOfYear([Date])),
				    InsertSemester = Table.AddColumn(InsertQuarter, "Semester", each if [Quarter] < 3 then 1 else 2),
				    InsertMonth = Table.AddColumn(InsertSemester, "Month (#)", each Date.Month([Date])),
				        // Simple week
				    InsertWeekYear = Table.AddColumn(InsertMonth, "WeekYear", each [Year]),
				    InsertWeek = Table.AddColumn(InsertWeekYear, "Week", each Date.WeekOfYear([Date], P_FirstDayOfWeek )),
				    // ISO Week
				    InsertIsoYear = Table.AddColumn(InsertMonth, "WeekYear", each Date.Year(Date.AddDays([Date], 4-(Date.DayOfWeek([Date], Day.Monday) + 1)))),
				    InsertIsoWeek = Table.AddColumn(InsertIsoYear, "Week", each Duration.Days(Date.AddDays( [Date], 4-(Date.DayOfWeek([Date], Day.Monday) + 1)) - #date([WeekYear], 1 , 7 - Date.DayOfWeek( #date([WeekYear],1,4), Day.Monday)) ) / 7  + 1),
				    // Choose beetween simple Week and Iso Week according to parameter
				    ChosenWeek = if P_UseIsoWeek = true then InsertIsoWeek else InsertWeek,
				    
				    InsertDay = Table.AddColumn(ChosenWeek, "Day", each Date.Day([Date])),    
				    InsertMonthName = Table.AddColumn(InsertDay, "Month (Long)", each Date.ToText([Date], "MMMM", P_Culture), type text),
				    InsertShortMonthName = Table.AddColumn(InsertMonthName, "Month", each try(Text.Range([#"Month (Long)"],0,3)) otherwise [#"Month (Long)"]),
				    InsertCalendarWeek = Table.AddColumn(InsertShortMonthName, "Week (Year)", each "W" & Number.ToText([Week]) & " " & Number.ToText([WeekYear])),
				    InsertCalendarMonth = Table.AddColumn(InsertCalendarWeek, "Month (Year)", each [#"Month"] & " " & Number.ToText([Year])),
				    InsertCalendarQtr = Table.AddColumn(InsertCalendarMonth, "Quarter (Year)", each "Q" & Number.ToText([Quarter]) & " " & Number.ToText([Year])),    
				    InsertCalendarSem = Table.AddColumn(InsertCalendarQtr, "Semester (Year)", each "S" & Number.ToText([Semester]) & " " & Number.ToText([Year])),    
				    InsertDayWeek = Table.AddColumn(InsertCalendarSem , "Week Day (#)", each Date.DayOfWeek([Date], P_FirstDayOfWeek ) + 1),
				    InsertDayName = Table.AddColumn(InsertDayWeek, "Week Day", each Date.ToText([Date], "dddd", P_Culture), type text),
				    InsertWeekYearId = Table.AddColumn(InsertDayName, "WeekYearId", each [WeekYear] * 100 + [Week]),
				    InsertMonthYear = Table.AddColumn(InsertWeekYearId, "MonthYearId", each [Year] *100 + [#"Month (#)"]),
				    InsertWeekStartDate = Table.AddColumn(InsertMonthYear , "Week Start Date", each Date.StartOfWeek([Date], P_FirstDayOfWeek), type date),
				    InsertWeekEndDate = Table.AddColumn(InsertWeekStartDate , "Week End Date", each Date.EndOfWeek([Date], P_FirstDayOfWeek), type date),
				    InsertQuarterYear = Table.AddColumn(InsertWeekEndDate, "QuarterYearId", each [Year] * 100 + [Quarter]),
				    InsertSemesterYear = Table.AddColumn(InsertQuarterYear, "SemesterYearId", each [Year] * 100 + [Semester]),
				    #"Capitalized Each Word" = Table.TransformColumns(InsertSemesterYear,{{"Month (Long)", Text.Proper}, {"Month", Text.Proper}, {"Month (Year)", Text.Proper}, {"Week Day", Text.Proper}}),
				    #"Relative (Year)" = Table.AddColumn(#"Capitalized Each Word", "Year (Relative)", each [Year] - Date.Year(P_Today)),
				    #"Relative (Month)" = Table.AddColumn(#"Relative (Year)", "Month (Relative)", each [#"Year (Relative)"] * 12 + ([#"Month (#)"] - Date.Month(P_Today))),
				    #"Relative (Week)" = Table.AddColumn(#"Relative (Month)", "Week (Relative)", each Duration.TotalDays(DateTime.Date(Date.StartOfWeek([Date])) - DateTime.Date(Date.StartOfWeek(P_Today))) / 7),
				    #"Relative (Day)" = Table.AddColumn(#"Relative (Week)", "Day (Relative)", each Duration.TotalDays([Date] - DateTime.Date(P_Today))),
				    AddedWorkDay =Table.AddColumn(#"Relative (Day)", "Work Day", each if [#"Week Day (#)"] > 5 then "Weekend" else "WorkDay"),
				    #"Reordered Columns" = Table.ReorderColumns(AddedWorkDay,{"Date", "Day", "Week Day (#)", "Week Day", "Week", "Month (Long)", "Month", "Month (#)", "Quarter", "Semester", "Year", "Week (Year)", "Month (Year)", "Quarter (Year)", "Semester (Year)", "WeekYearId", "MonthYearId", "QuarterYearId", "SemesterYearId", "Day (Relative)", "Week (Relative)", "Month (Relative)", "Year (Relative)", "Work Day"}),
				    #"Removed Columns" = Table.RemoveColumns(#"Reordered Columns",{"WeekYear"}),
				    #"Changed Type" = Table.TransformColumnTypes(#"Removed Columns",{{"Day", Int64.Type}, {"Week Day (#)", Int64.Type}, {"Week", Int64.Type}, {"Month (#)", Int64.Type}, {"Quarter", Int64.Type}, {"Semester", Int64.Type}, {"Year", Int64.Type}, {"Week (Year)", type text}, {"Quarter (Year)", type text}, {"Semester (Year)", type text}, {"WeekYearId", Int64.Type}, {"SemesterYearId", Int64.Type}, {"MonthYearId", Int64.Type}, {"QuarterYearId", Int64.Type}, {"Day (Relative)", Int64.Type}, {"Month (Relative)", Int64.Type}, {"Year (Relative)", Int64.Type}, {"Work Day", type text}, {"DateId", Int64.Type}, {"Week (Relative)", Int64.Type}, {"Date", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

